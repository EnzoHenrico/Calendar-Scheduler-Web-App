import express from 'express';
import jwt from 'jsonwebtoken';
import dotenv from 'dotenv';

import {} from '../models/db_schema.js'

/** Implement necessary services for athentication
 * 
 * Sign-up(Register) services: 
 *  - Recive JSON with user input and verify if:
 *      - If Username alredy exists on Database: 
 *          - Return to controller a 409 conflict error and log
 *      - Else, the payload is valid to create a new user: 
 *          Create a new user on database with â†“
 *              - _id: autogenerated
 *              - username: recived on JSON
 *              - password: recived on JSON
 *              - events: empty array
 *          - Return to controller a 201 created message
 */         
 export function registerUser(payload){

}

/* 
 * Sign-in(Login) services:
 *  - Recive JSON with user input and verify if:
 *      - If username is registered on Database:
 *          - If password match registered password:
 *              - Get in user data: user Id, events Ids and set an object  
 *                  - Return to controller a 202 acepted and the object
 *              - Else password is whrong:
 *                  - Return to controller a 403 forbbiden
 *      - Else user does not exist:
 *          - Return to controller a 403 forbbiden
 */
export function verifyLogin(payload){

}    
